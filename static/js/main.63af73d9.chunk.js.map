{"version":3,"sources":["service.js","utils.js","reducer.js","Pages/Home.jsx","hooks/useQuery.js","Pages/Wallet.jsx","App.js","reportWebVitals.js","index.js"],"names":["transform","transactions","Set","map","item","currency","reduce","prev","next","filter","t","getRates","a","CAD_BTC","BTC_CAD","CAD_ETH","ETH_CAD","USD_BTC","BTC_USD","USD_ETH","ETH_USD","BTC_ETH","ETH_BTC","CAD_USD","USD_CAD","getTransactions","fetch","data","json","res","CURRENCY_MAP","CAD","name","iconUrl","BTC","ETH","getCurrrencyIcon","curr","convertToDollar","amount","rates","Number","toFixed","rate","initialState","loading","error","balances","total","ACTION_POPULATE_STORE","reducer","state","action","type","payload","Object","keys","direction","calculateBalance","Store","createContext","Provider","children","useReducer","dispatch","useEffect","effect","value","Title","Typography","Home","useContext","history","useHistory","style","padding","textAlign","itemLayout","dataSource","renderItem","Item","extra","onClick","push","Meta","avatar","src","title","description","useQuery","URLSearchParams","useLocation","search","Wallet","query","get","goBack","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63af73d9.chunk.js","sourcesContent":["// const RATE_URL = \"https://api.shakepay.co/rates\";\nconst TRANSACTIONS_URL =\n  \"https://shakepay.github.io/programming-exercise/web/transaction_history.json\";\n\nconst transform = (transactions) => {\n  const currencies = [...new Set(transactions.map((item) => item.currency))];\n  return currencies.reduce(\n    (prev, next) => ({\n      ...prev,\n      [next]: transactions.filter((t) => t.currency === next),\n    }),\n    {}\n  );\n};\n\nexport const getRates = async () => {\n  // Would have an api call here\n  // Getting CORS error for the Rates URL\n  return {\n    CAD_BTC: 0.00001716,\n    BTC_CAD: 58257.33,\n    CAD_ETH: 0.000233186952759646,\n    ETH_CAD: 4288.4,\n    USD_BTC: 0.00002166,\n    BTC_USD: 46164.68,\n    USD_ETH: 0.000294264779448547,\n    ETH_USD: 3398.3,\n    BTC_ETH: 13.585110718652357,\n    ETH_BTC: 0.07361,\n    CAD_USD: 0.79,\n    USD_CAD: 1.26,\n  };\n};\n\nexport const getTransactions = async () => {\n  const data = await fetch(TRANSACTIONS_URL);\n  const res = await data.json();\n  return transform(res);\n};\n","const CURRENCY_MAP = {\n  CAD: {\n    name: \"Dollar\",\n    iconUrl:\n      \"https://img.icons8.com/external-those-icons-lineal-color-those-icons/24/000000/external-dollar-money-currency-those-icons-lineal-color-those-icons-7.png\",\n  },\n  BTC: {\n    name: \"Bitcoin\",\n    iconUrl: \"https://img.icons8.com/office/16/000000/bitcoin.png\",\n  },\n  ETH: {\n    name: \"Ethereum\",\n    iconUrl: \"https://img.icons8.com/color/48/000000/ethereum.png\",\n  },\n};\n\nexport const getCurrrencyName = (curr) => {\n  return CURRENCY_MAP[curr].name;\n};\n\nexport const getCurrrencyIcon = (curr) => {\n  return CURRENCY_MAP[curr].iconUrl;\n};\n\nexport const calculateBalance = (transactions) => {\n  return (\n    Number(\n      transactions\n        .filter((t) => t.direction === \"credit\")\n        .reduce((prev, next) => Number(prev) + Number(next.amount), 0)\n    ) -\n    Number(\n      transactions\n        .filter((t) => t.direction === \"debit\")\n        .reduce((prev, next) => Number(prev) + Number(next.amount), 0)\n    )\n  ).toFixed(2);\n};\n\nexport const convertToDollar = (currency, amount, rates) => {\n  if (currency === \"CAD\") {\n    return Number(amount).toFixed(2);\n  }\n\n  if (!rates[`${currency}_CAD`]) {\n    return 0;\n  }\n\n  const rate = rates[`${currency}_CAD`];\n\n  return Number(amount * rate).toFixed(2);\n};\n","import { createContext, useEffect, useReducer } from \"react\";\nimport { getRates, getTransactions } from \"./service\";\nimport { calculateBalance, convertToDollar } from \"./utils\";\n\nconst initialState = {\n  loading: true,\n  error: false,\n  balances: {},\n  total: 0,\n  transactions: {},\n  rates: {},\n};\n\nconst ACTION_POPULATE_STORE = \"ACTION_POPULATE_STORE\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_POPULATE_STORE: {\n      const { transactions, rates } = action.payload;\n      const balances = Object.keys(transactions).reduce((prev, next) => {\n        return { ...prev, [next]: calculateBalance(transactions[next]) };\n      }, {});\n      const total = Object.keys(balances).reduce(\n        (prev, next) => Number(prev) + Number(convertToDollar(next, balances[next], rates)),\n        0\n      );\n      return { ...state, transactions, balances, total, rates, loading: false };\n    }\n    default:\n      return { ...initialState };\n  }\n};\n\nexport const Store = createContext();\n\nexport const Provider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    async function effect() {\n      try {\n        const transactions = await getTransactions();\n        const rates = await getRates();\n        dispatch({\n          type: ACTION_POPULATE_STORE,\n          payload: { transactions, rates },\n        });\n      } catch (err) {}\n    }\n    effect();\n  }, []);\n\n  return (\n    <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Divider, List, Spin, Typography } from \"antd\";\n\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport { Store } from \"../reducer\";\nimport { useHistory } from \"react-router-dom\";\nimport { convertToDollar, getCurrrencyIcon } from \"../utils\";\n\nconst { Title } = Typography;\n\nconst Home = () => {\n  const { state } = useContext(Store);\n  const history = useHistory();\n\n  const { loading, total, balances, rates } = state;\n\n  return (\n    <>\n      {loading && <Spin />}\n      {!loading && (\n        <div style={{ padding: \"10px\" }}>\n          <Title type=\"success\" style={{ textAlign: \"center\" }}>\n            ${total}\n          </Title>\n          <Divider />\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={Object.keys(balances)}\n            renderItem={(item) => (\n              <List.Item\n                extra={balances[item]}\n                onClick={() => history.push(`/wallet?curr=${item}`)}\n              >\n                <List.Item.Meta\n                  avatar={<Avatar src={getCurrrencyIcon(item)} />}\n                  title={item}\n                  description={`$${convertToDollar(\n                    item,\n                    balances[item],\n                    rates\n                  )}`}\n                />\n              </List.Item>\n            )}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { useLocation } from \"react-router-dom\";\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import { Button, Divider, List } from \"antd\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport Title from \"antd/lib/typography/Title\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useQuery from \"../hooks/useQuery\";\nimport { Store } from \"../reducer\";\nimport { getCurrrencyIcon, getCurrrencyName } from \"../utils\";\n\nconst Wallet = () => {\n  const query = useQuery();\n  const history = useHistory();\n  const currency = query.get(\"curr\");\n\n  const { state } = useContext(Store);\n\n  const { balances, transactions } = state;\n\n  return (\n    <div style={{ padding: \"10px\" }}>\n      <Title>{getCurrrencyName(currency)}</Title>\n      <Button type=\"link\" onClick={() => history.goBack()}>\n        Go Back\n      </Button>\n      <h3>Balance - {balances[currency]}</h3>\n      <Divider />\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={transactions[currency]}\n        renderItem={(item) => (\n          <List.Item extra={item.amount}>\n            <List.Item.Meta\n              avatar={<Avatar src={getCurrrencyIcon(currency)} />}\n              title={item.type}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Wallet;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport \"antd/dist/antd.css\";\n\nimport { Provider } from \"./reducer\";\n\nimport Home from \"./Pages/Home\";\nimport Wallet from \"./Pages/Wallet\";\n\nfunction App() {\n  return (\n    <Router basename=\"/crypto-wallet\">\n      <Provider>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/wallet\">\n            <Wallet />\n          </Route>\n          <Route path=\"*\">404</Route>\n        </Switch>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}